---
# requirements install
- name: Install Roles from Galaxy
  hosts: all
  connection: local
  tasks:
    - name: installing required ansible-galaxy roles
      command: "ansible-galaxy install --ignore-errors -r requirements.yml"

# Let's rock on ALM
- name: Deploy Jenkins CI
  hosts: jenkins_server
  vars: 
    ansible_install_method: pip
    ansible_install_version_pip: "2.8.0" 
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - geerlingguy.repo-epel
    - geerlingguy.jenkins
    - geerlingguy.git
    - tecris.maven
    - geerlingguy.pip
    - geerlingguy.ansible

  hosts: awx_server
  vars: 
    ansible_install_method: pip
    ansible_install_version_pip: "2.8.0"
    awx_version: "devel"
    nodejs_version: "6.x"
    pip_install_packages: 
      - name: docker
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
  
  roles: 
    - geerlingguy.repo-epel
    - geerlingguy.git
    - geerlingguy.pip
    - geerlingguy.ansible
    - geerlingguy.docker
    - geerlingguy.nodejs
    - geerlingguy.awx


- name: Deploy Nexus Server
  hosts: nexus_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - geerlingguy.java
    - savoirfairelinux.nexus3-oss

- name: Deploy Sonar Server
  hosts: sonar_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes
#  vars:
#    java_packages:
#      - openjdk-8-jdk
  roles:
    - wtanaka.unzip
    - geerlingguy.java
    - lrk.sonarqube

- name: On Premises CentOS
  hosts: app_server
  remote_user: "{{ ansible_ssh_user | default('vagrant') }}"
  become: yes

  roles:
    - jenkins-keys-config

